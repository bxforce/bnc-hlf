#!/bin/bash

# env BNC_BUILD_PATH
# env BNC_CONFIG_PATH

DOCKER_IMAGE=bnc-hlf
DOCKER_NETWORK=bnc_network

if [[ "$(docker images -q $DOCKER_IMAGE 2> /dev/null)" == "" ]] || [[ ! -z "$BNC_BUILD_PATH" ]]; then
    docker build -t bnc-hlf -f Dockerfile $BNC_BUILD_PATH
fi

if [[ -z "$(docker network ls -q -f name=$DOCKER_NETWORK)" ]]; then 
    docker network create --driver=bridge $DOCKER_NETWORK;
fi

if [[ -z "$BNC_CONFIG_PATH" ]]; then
    BNC_CONFIG_PATH=$PWD/tests/single_machine
fi

docker run -it --rm --name bnc-hlf --network $DOCKER_NETWORK \
    -v /tmp/hyperledger-fabric-network:/tmp/hyperledger-fabric-network \
    -v $BNC_CONFIG_PATH:/root/tests \
    -v /var/run/docker.sock:/var/run/docker.sock \
        bnc-hlf $@

#### NOTES ####
## Chaincode requirement: 
# cp -r ./tests/chaincode /tmp/hyperledger-fabric-chaincode
## Chaincode build: 
# ./bnc chaincode cli && docker exec -it cli.org1.bnc.com /bin/bash -c "cd /opt/gopath/src/github.com/hyperledger/fabric-samples/chaincode/abstore/go; GO111MODULE=on go mod vendor; cd; peer lifecycle chaincode package mycc.tar.gz --path github.com/hyperledger/fabric-samples/chaincode/abstore/go/ --lang golang --label mycc_1"
###############
